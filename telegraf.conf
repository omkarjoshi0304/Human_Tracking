# Working Telegraf Configuration - Uses existing bucket
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = true

# MQTT Consumer
[[inputs.mqtt_consumer]]
  servers = ["tcp://localhost:1883"]
  
  # Your actual MQTT topics
  topics = [
    "home/sensors/Room/motion",
    "home/sensors/Hall/motion", 
    "home/sensors/Kitchen/motion",
    "home/status/Room",
    "home/status/Hall",
    "home/status/Kitchen",
    "home/sensors/+/motion",
    "home/status/+",
    "home/diagnostic/+",
    "home/events/+",
    "home/alerts/+"
  ]
  
  qos = 0
  connection_timeout = "30s"
  persistent_session = false
  client_id = "telegraf_working"
  
  # JSON parsing
  data_format = "json"
  json_time_key = "timestamp"
  json_time_format = "unix_ms"
  
  # Tags for better organization
  tag_keys = [
    "room",
    "sensor_type",
    "test_mode",
    "topic",
    "movement",
    "status",
    "raw_data",
    "presence",
    "event"
  ]
  
  # String fields
  json_string_fields = [
    "movement",
    "status",
    "raw_data",
    "event",
    "type",
    "test_mode",
    "presence"
  ]
  
  # Measurement name
  name_override = "human_tracking"

# InfluxDB v2 Output - Using your existing bucket
[[outputs.influxdb_v2]]
  urls = ["http://localhost:8086"]
  token = "I9n46TQ4cILlZ_yylb-o18KkaN_T0T0Kn53p-W80r32p98FdffZTb0d2iQ-IhshNAMo2cMrPRHM2rtF71J0tdA=="
  organization = "dcu masters project"
  bucket = "dcu masters project"  # Using your existing bucket
  timeout = "5s"

# Debug output to see what's being processed
[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"